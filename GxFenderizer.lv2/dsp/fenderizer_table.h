
// fenderizer_table generated by DK/tube_table_gen.py -- do not modify manually

struct table1d { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct table1d_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator table1d&() const { return *(table1d*)this; }
};

static table1d_imp<200> tube_table __rt_data = {
	0,0.759731,61.935,200, {
	0.000000000000,0.014515018868,0.026866512630,0.037454198332,0.046604854198,
	0.054585615297,0.061614845707,0.067871028911,0.073500037673,0.078621078768,
	0.083331554116,0.087711035836,0.091824516736,0.095725068298,0.099456014181,
	0.103052707528,0.106543984316,0.109953351782,0.113299960231,0.116599397693,
	0.119864339740,0.123105080843,0.126329968882,0.129545760441,0.132757911352,
	0.135970814264,0.139187992916,0.142412260988,0.145645852005,0.148890525549,
	0.152147654118,0.155418294144,0.158703244070,0.162003091831,0.165318253687,
	0.168649005968,0.171995511039,0.175357838516,0.178735982630,0.182129876412,
	0.185539403296,0.188964406600,0.192404697282,0.195860060278,0.199330259684,
	0.202815042988,0.206314144531,0.209827288341,0.213354190432,0.216894560705,
	0.220448104477,0.224014523749,0.227593518228,0.231184786167,0.234788025047,
	0.238402932136,0.242029204941,0.245666541577,0.249314641066,0.252973203584,
	0.256641930654,0.260320525304,0.264008692202,0.267706137753,0.271412570183,
	0.275127699605,0.278851238072,0.282582899614,0.286322400274,0.290069458126,
	0.293823793299,0.297585127984,0.301353186444,0.305127695023,0.308908382143,
	0.312694978304,0.316487216089,0.320284830154,0.324087557225,0.327895136096,
	0.331707307619,0.335523814698,0.339344402284,0.343168817364,0.346996808955,
	0.350828128096,0.354662527838,0.358499763234,0.362339591334,0.366181771174,
	0.370026063765,0.373872232087,0.377720041079,0.381569257626,0.385419650558,
	0.389270990631,0.393123050526,0.396975604835,0.400828430052,0.404681304566,
	0.408534008651,0.412386324456,0.416238035995,0.420088929140,0.423938791612,
	0.427787412969,0.431634584600,0.435480099714,0.439323753332,0.443165342276,
	0.447004665165,0.450841522399,0.454675716157,0.458507050382,0.462335330777,
	0.466160364793,0.469981961622,0.473799932186,0.477614089133,0.481424246821,
	0.485230221316,0.489031830379,0.492828893461,0.496621231691,0.500408667867,
	0.504191026454,0.507968133565,0.511739816962,0.515505906043,0.519266231832,
	0.523020626976,0.526768925731,0.530510963956,0.534246579106,0.537975610222,
	0.541697897921,0.545413284394,0.549121613388,0.552822730208,0.556516481702,
	0.560202716254,0.563881283780,0.567552035714,0.571214825004,0.574869506101,
	0.578515934954,0.582153969001,0.585783467159,0.589404289820,0.593016298838,
	0.596619357527,0.600213330647,0.603798084401,0.607373486425,0.610939405781,
	0.614495712948,0.618042279817,0.621578979678,0.625105687220,0.628622278517,
	0.632128631021,0.635624623559,0.639110136320,0.642585050852,0.646049250050,
	0.649502618152,0.652945040731,0.656376404685,0.659796598235,0.663205510909,
	0.666603033544,0.669989058274,0.673363478521,0.676726188991,0.680077085666,
	0.683416065797,0.686743027894,0.690057871723,0.693360498295,0.696650809863,
	0.699928709911,0.703194103149,0.706446895506,0.709686994121,0.712914307338,
	0.716128744701,0.719330216940,0.722518635973,0.725693914892,0.728855967959,
	0.732004710601,0.735140059399,0.738261932083,0.741370247529,0.744464925745,
	0.747545887871,0.750613056167,0.753666354011,0.756705705888,0.759731037386
	}
};

double always_inline tubeclip(double x) {
    double f = fabs(x);
    f = f * tube_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = tube_table.data[0];
    } else if (i >= tube_table.size-1) {
        f = tube_table.data[tube_table.size-1];
    } else {
    f -= i;
    f = tube_table.data[i]*(1-f) + tube_table.data[i+1]*f;
    }
    return copysign(f, x);
}

